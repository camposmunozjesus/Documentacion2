JAVA - FICHEROS
===============
<CREAR LINK SIMBÓLICOS>**********************************************************************************************************************************
------------
ADVERTENCIAS
------------
Al crear link simbólicos se obtiene el siguiente error:
	Error |
	java.nio.file.FileSystemException: {target_link}: El cliente no dispone de un privilegio requerido.
Esto no es un problema del Java, sino de los permisos de Windows 7. Para solucionarlo (aunque no funciona) debería ser:
	Ejecutar secpol.msc -> "Security Settings|Local Policies|User Rights Assignment|Create symbolic links"
tal y como se habla en: http://stackoverflow.com/questions/8228030/getting-filesystemexception-a-required-privilege-is-not-held-by-the-client-usi (https://www.google.es/search?q=java.nio.file.File+System+Exception::+El+cliente+no+dispone+de+un+privilegio+requerido.&spell=1&ei=qJpIVbDRBob4Uva3gaAG)

Una solución es ejecutar el GGTS/Apache-Tomcat como administrador.


------
CÓDIGO
------
package scriptdemo

import java.nio.file.Files
import java.nio.file.Path
import java.nio.file.Paths

class TestController {

    def index() {
		Path target = Paths.get("D:\\app\\rrhh_resources\\PAS");
		Path newLink = Paths.get("D:\\FOLDER_NEW");
		try {
			Files.createSymbolicLink(newLink, target);
		} catch (IOException x) {
			System.err.println(x);
		} catch (UnsupportedOperationException x) {
			// Some file systems do not support symbolic links.
			System.err.println(x.detailMessage);
		}
	}
}

Ejemplo de usor de Path: http://jakubstas.com/links-nio-2/

<FICHEROS>***********************************************************************************************************************************************
Crear un directorio: 			File("D:\\JJJnew_folderJJJ").mkdir()
Crear un fichero: 				File("D:\\JJJnew_folderJJJ").createNewFile()
Brorrar un directorio/fichero: 	File("D:\\JJJnew_folderJJJ").delete()


-------------
CREAR FICHERO
-------------
	File f = new File("ficheroCreadoDesdeJavaProg.txt");
	
	boolean boolRes = false;
	
	try {
		//Con la siguiente instrucción se creará el fichero
		boolRes = f.createNewFile();
		
	} catch (Exception e) {
		// TODO: handle exception
	}
--------------------
ABRIR FICHERO - LEER
--------------------
1era opción:
************
	File f = new File("ficheroNum1.txt");
	
	try {
		//Escibir en el fichero
		FileReader fr = new FileReader(f);
		char[] in = new char[50];
		fr.read(in);
		System.out.println(in);
	} catch (Exception e) {
		// TODO: handle exception
		System.out.println("ERROR");
	}
	
	
2da opción:
***********
	String cadena;
	
	try {
		FileReader f = new FileReader("ficheroNum1.txt");
		BufferedReader b = new BufferedReader(f);
		while((cadena = b.readLine())!=null) {
			System.out.println(cadena);
		}
		b.close();
	} catch (Exception e) {
		// TODO: handle exception
		System.out.println("ERROR");
	}
	
	
------------------------
ABRIR FICHERO - ESCRIBIR
------------------------
1era opción:
************
	File f = new File("ficheroCreadoDesdeJavaProg.txt");
	
	try {
		//Escibir en el fichero
		FileWriter fw = new FileWriter(f);
		fw.write("Ejemplo de pruebas");
		fw.close();
	} catch (Exception e) {
		// TODO: handle exception
		System.out.println("ERROR");
	}
	
	
2da opción:
***********
	FileWriter fichero = null;
	PrintWriter pw = null;
	try {
		fichero = new FileWriter("ficheroCreadoDesdeJavaProg2.txt");
		pw = new PrintWriter(fichero);

		for (int i = 0; i < 10; i++)
		{
			pw.println("Linea " + i);
		}
		fichero.close();
	} catch (Exception e) {
		// TODO: handle exception
		System.out.println("ERROR");
	}
	

--------------------
DIRECTORIOS - LISTAR
--------------------
	File f = new File("dirPruebas");
	
	try {
		//El siguiente vector de String's contiene la lista de directorios y archivos.
		String[] directorios = f.list();
		for (String string : directorios) {
			System.out.print(string);
			if(new File("dirPruebas"+"/"+string).isDirectory()){
				System.out.println(" - Es un directorio");
			}
			else{
				System.out.println();
			}
		}
	} catch (Exception e) {
		// TODO: handle exception
		System.out.println("ERROR");
	}

*********************************************************************************************************************************************************
------------------------------
Creación:	05-05-2015

Jesús Campos Muñoz
jesus.campos@upc.edu
------------------------------