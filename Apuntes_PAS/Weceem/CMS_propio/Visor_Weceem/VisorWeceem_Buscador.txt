VISOR WECEEM - BUSCADOR
=======================
Originalmente en los template había:
	<upc:search max="15" eraseplaceholder="no" placeholder="Cercar..." types="com.upc.WcmPlantillaFitxa"></upc:search>

Instrucción para capturar el buscador del template del CMS Weceem y reemplazarlo por su equivalente para ser utilizado en render:
	if(webPage.contains("<upc:search max=\"15\" eraseplaceholder=\"no\" placeholder=\"Cercar...\" types=\"com.upc.WcmPlantillaFitxa\"></upc:search>")){
		webPage = webPage.replace("<upc:search max=\"15\" eraseplaceholder=\"no\" placeholder=\"Cercar...\" types=\"com.upc.WcmPlantillaFitxa\"></upc:search>", "<form action=\"/IniciPDIPAS/searcher/search\" method=\"post\"><input name=\"query\" class=\"customSearchField\" placeholder=\"Cercar...\" onfocus=\"\" value=\"\" id=\"query\" type=\"text\"><input name=\"_action_search\" class=\"customSearchButton\" value=\"Cerca\" type=\"submit\"></form>")
	}
Cómo se traduce el buscador original para poder utilizarlo con el render.

Buscador original que redirecciona a melnik: (código para la instrucción render)
	"<form action=\"searcher\" method=\"post\"><input name=\"query\" class=\"customSearchField\" placeholder=\"Cercar...\" onfocus=\"\" value=\"\" id=\"query\" type=\"text\"><input name=\"submit\" class=\"customSearchButton\" value=\"Cerca\" id=\"submit\" type=\"submit\"></form>"

Traducido, debido  que render NO interpreta g:form, etc:
	"<form action=\"/IniciPDIPAS/searcher/search\" method=\"post\"><input name=\"query\" class=\"customSearchField\" placeholder=\"Cercar...\" onfocus=\"\" value=\"\" id=\"query\" type=\"text\"><input name=\"_action_search\" class=\"customSearchButton\" value=\"Cerca\" type=\"submit\"></form>"

En un futuro se debe introducir el comentario <!--Buscador--> en el template en lugar de introducir la etiqueta wcm. Si se hace así, entonces cuando se
utilice el visor original de Weceem no tendremos buscador.

--------------------------------------------
DESARROLLO DEL BUSACDOR PROPIO GROOVY/GRAILS
--------------------------------------------
Si buscamos: "index" ó "InDex" y tenemos como instrucció (además de restingir el espacio y el tipo)
* ilike("aliasuri", "%"+ params.query +"%") dará las siguientes coincidencias:
	[index, index2, index_noboot, index_nowidgets]
	
* ilike("aliasuri", "%"+ params.query +"%") dará las siguientes coincidencias:
	[index]
	
<VERSIÓN #1>*********************************************************************************************************************************************
El buscador no pagina bien, hayq ue acabar de arreglar lo de eleminar las páginas que sólo tienen href en la palabra buscada.
Problemas: regexp NO es case-insensitive

package inicipdipas.tools

import org.weceem.content.WcmContent

/**
 * Buscador del CMS.
 * @author Jesus Campos
 * @version 1.0
 * @since 15 Enero de 2015
 */
class SearcherController {

	static DRAFT_VALUE = 2406
	static UNMODERATED_VALUE = 2407
	static REVIEWED_VALUE = 2408
	static APPROVED_VALUE = 2409
	static PUBLISHED_VALUE = 2410
	static ARCHIVED_VALUE = 2411
		
//	static allowedMethods = [index: "GET"]
	
	def static allowedTypes = ['org.weceem.html.WcmHTMLContent', 'com.upc.WcmPlantillaFitxa', 'com.upc.WcmPlantillaFitxa2ColGenerica', 'com.upc.WcmPlantillaFitxaGenerica']
//	def static allowedTypes = ['com.upc.WcmPlantillaFitxa', 'com.upc.WcmPlantillaFitxa2ColGenerica', 'com.upc.WcmPlantillaFitxaGenerica']
//	def static allowedTypes = ['org.weceem.html.WcmHTMLContent']
	def spaceId = 2711		//Conseguir el space a partir del perfil del usuario !!!
	def spaceName = "PAS"
	def informacioGeneralId = 2810

	def index() {
		
		params.max=10
		
		def query = {
			and{
				eq("space", spaceId)
				eq("status", PUBLISHED_VALUE)
				'in'("type", allowedTypes)
				or{
					ilike("title", "%"+ params.query +"%")
					ilike("menuTitle", "%"+ params.query +"%")
					ilike("htmlTitle", "%"+ params.query +"%")
					ilike("keywords", "%"+ params.query +"%")
					ilike("description", "%"+ params.query +"%")
					ilike("aliasuri", "%"+ params.query +"%")
					ilike("content", "%"+ params.query +"%")
				}
			}
			
		}
		
		//Carga de las coincidencias de la búsqueda
		def resultList = WcmContent.createCriteria().list(params,query)
		def results = resultList.getTotalCount()
		
		//Para buscar algo del tipo href="/IniciPDIPAS/..../${params.query}/...." -> Si la página tiene sólo estas coincidencias
		//será descartada para mostrarla en el buscador. Puede darse el caso de buscar la palabra "PAS" en el y que entren
		//en la lista de resultados todas las palabras que contengan enlaces a archivos y fichas, ejemplo:
		// <a href="/IniciPDIPAS/PAS/index/Sistema-retributiu">Sistema retributiu</a>
		def regexp = /href=.*${params.query}.*\"/

		def listaDefinitiva = []
		//Conseguir la url completa para los resultados que se mostrarán en pantalla. No se tendrán en cuenta las páginas en
		//las que la coincidencia esté únicamente en enlaces.
		resultList.each {
			if((it.content =~ /${params.query}/).size()!=(it.content =~ regexp).size()){
				listaDefinitiva << it
				it.absoluteURI=getAbsoluteURI(it.identity, it.aliasuri, it.parent)
			}
				
		}
		
		println listaDefinitiva.size()
		
		[space:spaceName, resultList:listaDefinitiva, total:listaDefinitiva.size(), spaceName:spaceName]
	}
	
	/**
	 * Se sabe que una p&aacute;gina (ficha de dos columnas o ficha simple) va a estar ubicada en:<br>
	 * <ul>
	 * 	<li>En el caso de una ficha de dos columnas (com.upc.WcmPlantillaFitxa2ColGenerica): http://servidor/IniciPDIPAS/PAS/index/Informacio_General/El-PAS-a-la-UPC</li>
	 * 	<li>En el caso de una ficha (com.upc.WcmPlantillaFitxa, com.upc.WcmPlantillaFitxaGenerica): http://servidor/IniciPDIPAS/PAS/index/Informacio_General/El-PAS-a-la-UPC/Personal-Funcionari</li>
	 * </ul>
	 * Por lo que la ruta http://servidor/IniciPDIPAS/PAS/index/Informacio_General/ va a ser fija. Entonces para el caso de las
	 * fichas desplegables con dos columnas la ruta absoluta no implicar&aacute; ning&aacute;n acceso adicional a la base de datos. Se 
	 * formar&aacute; con el aliasuri de la p&aacute;gina encontrada y el String anterior. En el caso de una ficha se necesitar&aacute; un acceso a
	 * base de datos para obtener el elemento que falta, en el ejemplo "El-PAS-a-la-UPC".
	 * @param id Identificador de la p&aacute;gina de la que buscar su ruta absoluta.
	 * @param alias Nombre de la p&aacute;gina de la que buscar su ruta absoluta.
	 * @param parentId Identifidcador del elemnto padre.
	 * @return Un String con el path absoluto para poder acceder a la p&aacute;gina web.
	 */
	private String getAbsoluteURI(def id, def alias, def parentId){
		def path = "/${grails.util.Metadata.current.'app.name'}/${spaceName}/index/"
		
		if(parentId == informacioGeneralId){
			return path+alias
		}
		else{
			//Conseguir el alias uri de la ficha de dos columnas (com.upc.WcmPlantillaFitxa2ColGenerica).
			//No se controla si es nulo el resultado de la operación porque no puede serlo, entre Informacio_General 
			//y la página forzosamente ha de existir otra página.
			//parentId es el id(único) de otro contenido.
			def result = WcmContent.findByIdentity(parentId)
			
			if(parentId && result.aliasuri)
				return path+result.aliasuri+"/"+alias
		}
	}
}



*********************************************************************************************************************************************************
<VERSIÓN #2>*********************************************************************************************************************************************
Casi la misma que la anterior con comentarios. Para cero coincidencias o query vacía no se muestra nada. Se introduce un cambio en conseguir el path,
nunca nos llamarán de algo que sea una ficha con dos columnas.

package inicipdipas.tools

import org.weceem.content.WcmContent

/**
 * Buscador del CMS. Busca por el patrón indicado sin tener el cuenta mayúsculas y minúsculas. Intenta encontrar coincidencias
 * en los siguientes tipos de documentos:
 * <ul>
 *  <li>org.weceem.html.WcmHTMLContent</li>
 *  <li>com.upc.WcmPlantillaFitxa</li>
 *  <li>com.upc.WcmPlantillaFitxa2ColGenerica</li>
 *  <li>com.upc.WcmPlantillaFitxaGenerica</li>
 * </ul>
 * Para encontrar coincidencias busca en los siguientes campos de cada tipo:
 * <ul>
 *  <li>title</li>
 *  <li>menuTitle</li>
 *  <li>htmlTitle</li>
 *  <li>keywords</li>
 *  <li>description</li>
 *  <li>aliasuri</li>
 *  <li>content</li>
 * </ul>
 * @author Jesus Campos
 * @version 1.0
 * @since 15 Enero de 2015
 */
class SearcherController {

	static DRAFT_VALUE = 2406
	static UNMODERATED_VALUE = 2407
	static REVIEWED_VALUE = 2408
	static APPROVED_VALUE = 2409
	static PUBLISHED_VALUE = 2410
	static ARCHIVED_VALUE = 2411
	
	static PAGINA_CONTACTE = "contacte"
	static PAGINA_ACCESSIBILITAT = "accessibilitat"
	static PAGINA_BUSCADOR = "search-results"
	
		
//	static allowedMethods = [index: "GET"]
	
	def static allowedTypes = ['org.weceem.html.WcmHTMLContent', 'com.upc.WcmPlantillaFitxa', 'com.upc.WcmPlantillaFitxa2ColGenerica', 'com.upc.WcmPlantillaFitxaGenerica']
//	def static allowedTypes = ['com.upc.WcmPlantillaFitxa', 'com.upc.WcmPlantillaFitxa2ColGenerica', 'com.upc.WcmPlantillaFitxaGenerica']
//	def static allowedTypes = ['org.weceem.html.WcmHTMLContent']
	def spaceId = 2711		//Conseguir el space a partir del perfil del usuario !!!
	def spaceName = "PAS"
	def informacioGeneralId = 2810

	def index() {
		
		if(params.query.equals("")){
			return [resultList:null, total:0]
		}
		
		def query = {
			and{
				eq("space", spaceId)
				eq("status", PUBLISHED_VALUE)
				'in'("type", allowedTypes)
				or{
					ilike("title", "%"+ params.query +"%")
					ilike("menuTitle", "%"+ params.query +"%")
					ilike("htmlTitle", "%"+ params.query +"%")
					ilike("keywords", "%"+ params.query +"%")
					ilike("description", "%"+ params.query +"%")
					ilike("aliasuri", "%"+ params.query +"%")
					ilike("content", "%"+ params.query +"%")
				}
			}
			
		}
		
		//Carga de las coincidencias de la búsqueda
		def resultList = WcmContent.createCriteria().list(query)
		
		if(resultList.size()>0)
		{
			//Para buscar algo del tipo href="/IniciPDIPAS/..../${params.query}/...." -> Si la página tiene sólo estas coincidencias
			//será descartada para mostrarla en el buscador. Puede darse el caso de buscar la palabra "PAS" en el y que entren
			//en la lista de resultados todas las palabras que contengan enlaces a archivos y fichas, ejemplo:
			// <a href="/IniciPDIPAS/PAS/index/Sistema-retributiu">Sistema retributiu</a>
			//(?i): para hacer búsquedas case-insensitive.
			def regexp = /(?i)href=.*${params.query}.*\"/
	
			def listaDefinitiva = []
			//Conseguir la url completa para los resultados que se mostrarán en pantalla. No se tendrán en cuenta las páginas en
			//las que la coincidencia esté únicamente en enlaces.
			resultList.each {
				if((it.content =~ /(?i)${params.query}/).size()!=(it.content =~ regexp).size()
				||it.title=~ /(?i)${params.query}/
				||it.menuTitle=~ /(?i)${params.query}/
				||it.htmlTitle=~ /(?i)${params.query}/
				||it.keywords=~ /(?i)${params.query}/
				||it.description=~ /(?i)${params.query}/
				||it.aliasuri=~ /(?i)${params.query}/){
				
					//Si la página del buscador está entre los resultados se elimina
					if(!it.aliasuri.equals(PAGINA_BUSCADOR)){
						listaDefinitiva << it
						it.absoluteURI=getAbsoluteURI(it.identity, it.aliasuri, it.parent)
					}
				}
					
			}
			
			def ini = params.offset ? params.offset.toInteger() : 0
			def max = params.max ? params.max.toInteger() : 5
			def fin = (ini + max) > listaDefinitiva.size() ? listaDefinitiva.size() : (ini + max)
			
			println "SIZE: "+listaDefinitiva.size()
			println "DATA: "+listaDefinitiva.aliasuri
			
			[resultList:listaDefinitiva[ini..fin-1], total:listaDefinitiva.size()]
		}		
		else{
			[resultList:null, total:0]
		}
		
		
	}
	
	/**
	 * Se sabe que una p&aacute;gina (ficha de dos columnas o ficha simple) va a estar ubicada en:<br>
	 * <ul>
	 *  <li>En el caso de una ficha de dos columnas (com.upc.WcmPlantillaFitxa2ColGenerica): http://servidor/IniciPDIPAS/PAS/index/Informacio_General/El-PAS-a-la-UPC</li>
	 *  <li>En el caso de una ficha (com.upc.WcmPlantillaFitxa, com.upc.WcmPlantillaFitxaGenerica): http://servidor/IniciPDIPAS/PAS/index/Informacio_General/El-PAS-a-la-UPC/Personal-Funcionari</li>
	 * </ul>
	 * Por lo que la ruta http://servidor/IniciPDIPAS/PAS/index/Informacio_General/ va a ser fija. Entonces para el caso de las
	 * fichas desplegables con dos columnas la ruta absoluta no implicar&aacute; ning&aacute;n acceso adicional a la base de datos. Se 
	 * formar&aacute; con el aliasuri de la p&aacute;gina encontrada y el String anterior. En el caso de una ficha se necesitar&aacute; un acceso a
	 * base de datos para obtener el elemento que falta, en el ejemplo "El-PAS-a-la-UPC".
	 * @param id Identificador de la p&aacute;gina de la que buscar su ruta absoluta.
	 * @param aliasuri Nombre (aliasuri) de la p&aacute;gina de la que buscar su ruta absoluta.
	 * @param parentId Identifidcador del elemnto padre.
	 * @return Un String con el path absoluto para poder acceder a la p&aacute;gina web.
	 */
	private String getAbsoluteURI(def id, def aliasuri, def parentId){
		def path = "/${grails.util.Metadata.current.'app.name'}/${spaceName}/index/"
		
		if(aliasuri.equals(PAGINA_CONTACTE) || aliasuri.equals(PAGINA_ACCESSIBILITAT)){
			return "/${grails.util.Metadata.current.'app.name'}/${spaceName}/"+aliasuri
		}		
		else if(parentId == informacioGeneralId){
			return path+aliasuri
		}
		else{
			//Conseguir el alias uri de la ficha de dos columnas (com.upc.WcmPlantillaFitxa2ColGenerica).
			//No se controla si es nulo el resultado de la operación porque no puede serlo, entre Informacio_General 
			//y la página forzosamente ha de existir otra página.
			//parentId es el id(único) de otro contenido.
			def result = WcmContent.findByIdentity(parentId)
			
			if(parentId && result.aliasuri)
				return path+result.aliasuri+"/"+aliasuri
		}
	}
}


*********************************************************************************************************************************************************
<VERSIÓN #3>*********************************************************************************************************************************************
16-02-2015
Es la última con paginación manual. El buscar por keywords hace que sea más fácil paginar.

package rrhh.tools

import org.weceem.content.WcmContent

import rrhh.Contingut


/**
 * 
 */
class SearcherController {

	def static allowedTypes = ['SHTML', 'NHTML']
	static llistaEspais = ["Default":1, "PAS":2, "PDI":3, "BEC":4, "GES":5]
//	def espaiId = 2		//Conseguir el space a partir del perfil del usuario !!!
//	def espaiNom = "PAS"

	def index() {
		
		def espaiNom
		def espaiId
		
		espaiNom = params.espai
		espaiId  = llistaEspais[espaiNom]
		
		if(params.query.equals("")){
			return [resultList:null, total:0, espaiNom:espaiNom]
		}

		def query = {
			and{
				eq("espai", espaiId)
				'in'("tipusContingut", allowedTypes)
				ilike("paraulesClau", "%"+ params.query +"%")
			}
			order("titol", "asc")
		}
		
		//Carga de las coincidencias de la búsqueda
		def resultList = []
		resultList = Contingut.createCriteria().list(params, query)
		
		if(resultList.size()>0)
		{
			println "---> " + resultList.getTotalCount()
			//Para buscar algo del tipo href="/IniciPDIPAS/..../${params.query}/...." -> Si la página tiene sólo estas coincidencias
			//será descartada para mostrarla en el buscador. Puede darse el caso de buscar la palabra "PAS" en el y que entren
			//en la lista de resultados todas las palabras que contengan enlaces a archivos y fichas, ejemplo:
			// <a href="/IniciPDIPAS/PAS/index/Sistema-retributiu">Sistema retributiu</a>
			//(?i): para hacer búsquedas case-insensitive.
//			def regexp = /(?i)href=.*${params.query}.*\"/
	
//			def listaDefinitiva = []
			//Conseguir la url completa para los resultados que se mostrarán en pantalla. No se tendrán en cuenta las páginas en
			//las que la coincidencia esté únicamente en enlaces.
			resultList.each {
//				if((it.contingut =~ /(?i)${params.query}/).size()!=(it.contingut =~ regexp).size()
//				||it.titol=~ /(?i)${params.query}/
//				||it.aliesUri=~ /(?i)${params.query}/){
//					listaDefinitiva << it
					it.absoluteURI=getAbsoluteURI(it, espaiNom)
//				}
					
			}
			
//			def ini = params.offset ? params.offset.toInteger() : 0
////			def max = params.max ? params.max.toInteger() : 5
//			def fin = (ini + max) > listaDefinitiva.size() ? listaDefinitiva.size() : (ini + max)
//			if(!(fin==0)){
//				return [resultList:resultList, total:resultList.getTotalCount(), espaiNom:espaiNom]
//			}
//			else{
//				return [resultList:null, total:0, espaiNom:espaiNom]
//			}
			
			return [resultList:resultList, total:resultList.getTotalCount(), espaiNom:espaiNom]
			
		}		
		else{
			[resultList:null, total:0, espaiNom:espaiNom]
		}
		
	}
	
	/**
	 * 
	 */
	private String getAbsoluteURI(Contingut contingut, espaiNom){
		def path = "/${grails.util.Metadata.current.'app.name'}/${espaiNom}/"
		return path+getParentURI(contingut)
	}
	
	private getParentURI(Contingut contingut){
		if(contingut.pare!=null){
			if(!contingut.tipusContingut.equals("FOLD")){
				return getParentURI(contingut.pare).toString()+"/"+contingut.aliesUri
			}else{
				return getParentURI(contingut.pare).toString()
			}
		}else{
			return contingut.aliesUri
		}		
	}
}

------------------------------
Creación:		15-01-2015
				
Jesús Campos Muñoz
jesus.campos@upc.edu
------------------------------