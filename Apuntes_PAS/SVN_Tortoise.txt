SNV TORTOISE
==============
-------------------------------------------------------------
PARA IMPORTAR DESDE svn://corbatera.upc.edu/opt/svn/Proyectos (Usado en el trabajo)
-------------------------------------------------------------
Crear una carpeta -> Proyectos\APLICACIONES\SIGRIS
Encima de ella (SIGRIS) -> Botón derecho -> "Repo-browser"
En la URL introducir "svn://corbatera.upc.edu/opt/svn/Proyectos" -> "OK"
Entonces se abrirá una ventana.
Ir a "Proyectos" -> "APLICACIONES" -> "SIGRIS" y "OK"
Y luego SVN Checkout sobre la carpeta SIGRIS. 

A partir de aquí en la carpeta aparecerán los símbolos de "SVN Update", "SVN Commit" ,etc.

Lo siguiente mejor no usarlo:
-------------------------------
Para importar desde Google Code
-------------------------------
https://pruebas-grails.googlecode.com/svn/trunk/

Botón derecho sobre la carpeta -> Import
- para descargar lo que hay en el repositorio de Google Code -> CHECKOUT
- para subir lo que hay en el PC a Google Code la primera vez -> IMPORT

A partir de aquí Checkout para descargar Import para subir.



----------------------------------------------------------------
PARA SUBIR UN PROYECTO DEL PC A UNA CARPETA VACÍA DE GOOGLE CODE
----------------------------------------------------------------
Botón derecho sobre la carpeta -> Import
https://pruebas-grails.googlecode.com/svn/brnaches/

El proyecto se subirá como:
svn
|---branches
          |--- Dentro de aquí estará el interior de la carpeta donde estaba el proyecto
		  
		  
		  
-------------------------------------------
QUITAR UN PROYECTO DEL CONTROL DE VERSIONES
-------------------------------------------
Botón derecho sobre la carpeta del proyecto -> TortoiseSVN -> Export y entonces elegimos la misma carpeta. Entonces preguntará si queremos eliminarlo
del control de versioness y decimos que SÍ.


----------------------------
CREAR CARPETA EN GOOGLE CODE
----------------------------
Botón derecho sobre cualquier carpeta -> TortoiseSVN -> Repo-browser y entonces una vez se abra el navegador introducimos la dirección deseada del
repositorio y tenemos acceso a sus carpetas y dentro de cada una de ellas podemos hacer botón derecho y crear directorios (folders).



----------------------------------
NO SINCRONIZAR UNA CARPETA INTERNA
----------------------------------
Se hace primero el import del proyecto, luego se eliminan las carpetas que no se quieren sincronizar del repositorio web, y posteriormente se
realiza el checkout.


--------------------------------------------------------------
NO SINCRONIZAR UN ARCHIVO: EVITAR ACTUALIZACIONES DESDE EL SVN
--------------------------------------------------------------
Tortoise SVN -> Unversion and add to ignore list -> Nombre_del_proyecto(recursively)

Cuando se descarga el proyecto y queda sincronizado, algunos archivos que se modifican como el classpath o similares se modifican. Estos archivos no
queremos subirlos al repositorio cuando hagamos un commit, pero tampoco queremos que se nos machaque al hacer un update con el archivo original del 
repositorio.

La opción es irse sobre el archivo y hacer: Tortoise SVN -> Unversion and add to ignore list -> Nombre_del_proyecto(recursively)
Aparecerá un icono de una aspa (X) de color rojo.

Para deshacer estos cambios hay dos opciones:
* Para poder incluir de nuevo el archivo en el control de versiones: Tortoise SVN -> Revert => recuperaremos la versión del repositorio (se perderán
  los cambios en local) y el archivo volverá a tener el icono verde de sincronizado.
* Para poder incluir de nuevo el archivo en el control de versiones: Tortoise SVN -> Add(as a replacement)... => aquí lo que ocurre es que se añade
  el archivo en local (que previamente había sido excluído del control de versiones) al repositorio. Entonces la aspa roja se cambia por:
	- Un interrogante dentro de un círculo rojo si el archivo ha sido modificado después de señalarlo como unversioned.
	- Con una cruz azul si el archivo no ha sido modificado después de marcarlo como unversioned.
  Al ejecutar la acción se sobrescribirá el archivo del repositorio con la versión que tenemos en local.
  
NOTAS: CUIDADO!!!
* Al realizar esta acción, cuando hagamos un commit, SIEMPRE los archivos marcado como unversioned aparecerán como deleted. HAY QUE DESMARCAR LOS 
  ARCHIVOS UNVERSIONED AL HACER UN COMMIT ya que si no lo hacemos, eliminará los archivos del repositorio.
* Eliminar los archivos del repositorio implica NO PODER RECUPERAR NINGUNA VERSIÓN, es decir, no poder utilizar el comparador de versiones.
