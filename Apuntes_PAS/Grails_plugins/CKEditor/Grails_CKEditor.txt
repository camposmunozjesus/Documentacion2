GRAILS - CKEDITOR PLUGIN
========================
----------------
LINKS DE INTERÉS
----------------
Siempre se habla de la versión 4.4.1.0, excepto cuando se indique lo contrario.
Sitio web de la versión 4 del plugin, con:		http://docs.ckeditor.com/#!/guide/dev_dialog_add_file_browser
Trata los estilos del CKEditor:					http://get-simple.info/wiki/how_to:editor_configuration_custom_files
ejemplos. Muy completo e interesnate.
*Links que tratan cómo subir las imágenes des el editor.Con el segundo link se soluciona todo. 
Configuración básica para poder subir imágenes:	http://docs.cksource.com/CKEditor_3.x/Developers_Guide/File_Browser_%28Uploader%29#Basic_Configuration
Cómo permitir la subida de imágenes desde el:	http://ckeditor.com/forums/Support/Having-problems-integrating-Filemanager
CKEditor


*****************************************************************************************************************************************************
------------------------------
INSTALACIÓN DE CKEDITOR PLUGIN
------------------------------
Referencia de utilización: 
Plugins must be declared in the grails-app/conf/BuildConfig.groovy file.
Example:
grails.project.dependency.resolution = {
   ...
   plugins {
      compile ":ckeditor:3.6.6.1.0"
   }
}


<CONFIGURACIÓN>**************************************************************************************************************************************
------
INICIO
------
Para poder utilizar el CKEditor hay que poner en la página GSP el siguiente código:
	<head>
		<ckeditor:resources/>
	</head>
	<body>
		<form action="texto2">
			<ckeditor:editor name="myeditor" height="400px" width="80%">
				${initialValue}
			</ckeditor:editor>
			<button>Enviar</button>
		</form>
	</body>
	
${initialValue}: es el contenido que queremos mostrar en el editor.	
Para recuperar el valor de la modificación en el controlador al dar a enviar hay que recuperar "params.myeditor".

Con esto, ya podemos utilizar el editor, no hace falta nada más, sólo descargar el plugin e incluir este código en la página GSP.	


-----------------
INCLUIR EL EDITOR
-----------------
Esta forma de incluir el editor permite cambiar el color desde la propia página HTML.
<html>
	<head>
		<ckeditor:resources/>
	</head>	
	<body>	
		<textarea cols="80" id="editor1" name="editor1" rows="10">&lt;p&gt;This is some &lt;strong&gt;sample text&lt;/strong&gt;. You are using &lt;a href="http://ckeditor.com/"&gt;CKEditor&lt;/a&gt;.&lt;/p&gt;</textarea>
		<script>

			// Replace the <textarea id="editor"> with an CKEditor
			// instance, using default configurations.
			CKEDITOR.replace( 'editor1', {
				uiColor: '#14B8C4',
				toolbar: [
					[ 'Bold', 'Italic', '-', 'NumberedList', 'BulletedList', '-', 'Link', 'Unlink' ],
					[ 'FontSize', 'TextColor', 'BGColor' ]
				]
			});
		</script>
	</body>
</html>
	
Cómo se recupera el texto?


-------------------------------------
ARCHIVOS DE CONFIGURACIÓN - CONFIG.JS
-------------------------------------
Para configurar las opciones del editor se puede tocar directamente el archivo "config.js" ubicado en:
	E:\Grails\workspace_bundle\CKEditor4_G243\target\work\plugins\ckeditor-4.4.1.0\web-app\js\ckeditor\config.js
Es decir, que para poder editarlo desde Eclipse/GGTS hay que ir a la perstaña "Navigator" (Window -> Show view -> Other ... -> Navigator) y acceder al 
archivo en cuestión a través de .link_to_grails_plugins/ckeditor-4.4.1.0/web-app/js/ckeditor/config.js

Para probar el funcionamiento de este archivo basta con poner el siguiente contenido en su interior:
CKEDITOR.editorConfig = function( config ) {
	// Define changes to default configuration here. For example:
	config.language = 'ca';
	config.uiColor = 'red';
	

	config.toolbar = [
     { name: 'document', items: [ 'Image','Source', '-', 'NewPage', 'Preview' ]},
     { name: 'clipboard', items: [ 'Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo' ] },
     '/',
     { name: 'basicstyles', items: [ 'Bold', 'Italic' ] }
 ];
};

Y se podrá comprobar como el color de la barra es rojo en lugar del gris por defecto y como en lugar de tres filas repletas de botones tan sólo aprecen
dos filas y muy pocos botones, en concreto los indicados.

En el caso de tener en el Config.groovy del proyecto (no del plugin) el siguiente código:
	ckeditor {
		config = "/js/myckconfig.js"
		...
	}
El archivo de configuración será el indicado en esta sección y no el "config.js", por lo que todo lo que se escriba en "config.js" no tendrá efecta.

-----------------------------------------------
ARCHIVOS DE CONFIGURACIÓN DISTINTO DE CONFIG.JS
-----------------------------------------------
Existe la opción de utilizar un fichero con extensión .js distinto al "config.js" ubicado dentro del plugin. Para ello hay que indicarlo en el archivo
Config.groovy del proyecto de la siguiente manera:
	ckeditor {
		config = "/js/myckconfig.js"
		...
	}
	
Donde el archivo "myckconfig.js" pasará a realiazr las funciones de "config.js" dejando éste último de tener validez.

El archivo "myckconfig.js" estará ubicado en "web-app/js/myckconfig.js" del proyecto.

	
----------------------------
PROBLEMAS CON EL PAQUETE WAR
----------------------------
Problema detectado en Grails 2.4.3 debido a que usa el plugin assets para comprimir los archivos en el momento de crear el WAR.

Al intentar crear el paquete WAR de un proyecto en Grails 2.4.3 que haya importado el plugin CKEditor 4 puede que no lo consigamos. La razón es que 
cuando el plugin "assets" intenta comprimir los archivos del ckeditor se obtiene una traza de error.

La solución es bien sencilla, comentar en el archivo BuilConfig.groovy la siguiente línea:
    plugins {
		...
        compile ":asset-pipeline:1.9.6"
		...
    }


<PERSONALIZACIÓN>************************************************************************************************************************************
-----------------------------------------------------------
AÑADIR UN BOTÓN PERSONALIZADO A LA BARRA DE TAREAS - WECEEM
-----------------------------------------------------------
Versión 3.6.6.1.0 para Weceem.

En /weceem-app-master/.link_to_grails_plugins/ckeditor-3.6.6.1.0/web-app/js/ckeditor/plugins/divdsp1 copiar la carpeta.

Añadir en Config.js:
	CKEDITOR.editorConfig = function( config )
	{
	//	config.extraPlugins = 'timestamp';
		config.extraPlugins = 'timestamp,divdsp1';

	};

En EditorFieldTagLib en void includeCKEditor() { ... añadir:
	'Timestamp','-','Divdsp1']

*******
<div class="row no-scroll-bar columnas-dobles">
  <div class="col-vxs-6 col-sm-6 col-md-6 col-lg-6 row-margin-bottom-col1">
    
    <!-- T&iacute;tol -->
    <div class="selectedTitol" id="box_100">
      <div class="minus" id="title_box_100">
        T&iacute;tol</div>
    </div>
    <!-- Contingut -->
    <div class="dsplContent" id="dsplContent_box_100">
      Contingut
    </div>
    <!-- Cierre primera columna--></div>
  <!--SEGUNDA COLUMNAS -->  
  <div class="col-vxs-6 col-sm-6 col-md-6 col-lg-6">
    
    <!-- T&iacute;tol -->
    <div class="selectedTitol" id="box_111">
      <div class="minus" id="title_box_111">
        T&iacute;tol</div>
    </div>
    <!-- Contingut -->
    <div class="dsplContent" id="dsplContent_box_111">
      Contingut
    </div>
    <!-- Cierre segunda columna--></div>
</div>
<p>
  &nbsp;</p>
******************************
	
<!-- T&iacute;tol -->
<div class="selectedTitol" id="box_112">
  <div class="minus" id="title_box_112">
	T&iacute;tol</div>
</div>
<!-- Contingut -->
<div class="dsplContent" id="dsplContent_box_112">
Contingut 
</div>



<!-- T&iacute;tol --><div class="selectedTitol" id="box_112">  <div class="minus" id="title_box_112">	T&iacute;tol</div></div><!-- Contingut --><div class="dsplContent" id="dsplContent_box_112">Contingut </div>



<!-- T&iacute;tol --><div class=\"selectedTitol\" id=\"box_112\">  <div class=\"minus\" id=\"title_box_112\">	T&iacute;tol</div></div><!-- Contingut --><div class=\"dsplContent\" id=\"dsplContent_box_112\">Contingut </div>



<SUBIR FICHEROS AL SERVIDOR>*************************************************************************************************************************
--------------
SUBIR IMÁGENES
--------------
Para poder subir imágenes desde el botón "imagen" (es decir que aparesca el tab "Upload" y en el tab "link" la opción de "Browse server") hay que 
configurar CKEditor expresamente para ello ya que por defecto no vienen estas opciones.

Para ello basta con poner en el Config.groovy del proyecto que importa el plugin CKEditor:
	ckeditor {
		config = "/js/myckconfig.js"
			skipAllowedItemsCheck = false
		defaultFileBrowser = "ofm"
		upload {
			basedir = "/uploads/"
				overwrite = false
				link {
					browser = true
					upload = false
					allowed = []
					denied = ['html', 'htm', 'php', 'php2', 'php3', 'php4', 'php5',
							  'phtml', 'pwml', 'inc', 'asp', 'aspx', 'ascx', 'jsp',
							  'cfm', 'cfc', 'pl', 'bat', 'exe', 'com', 'dll', 'vbs', 'js', 'reg',
							  'cgi', 'htaccess', 'asis', 'sh', 'shtml', 'shtm', 'phtm']
				}
				image {
					browser = true
					upload = true
					allowed = ['jpg', 'gif', 'jpeg', 'png']
					denied = []
				}
				flash {
					browser = false
					upload = false
					allowed = ['swf']
					denied = []
				}
		}
	}

	
Si con esto no fuera suficiente habría que indicar lo siguiente en el config.js (o su equivalente, que en este caso es "myconfig.js" y está ubicado en la carpeta "web-app")
del proyecto, no en la del plugin):
	config.filebrowserBrowseUrl = '/ck/ofm';
	config.filebrowserUploadUrl = '/ck/ofm';

Información útil extraída de:
	http://ckeditor.com/forums/Support/Having-problems-integrating-Filemanager
	
El directorio "uploads" que es donde se guardarán los ficheros subidos al servidor se ubicará dentro de "web-app".
-----------------------------------------------------------------
CAMBIAR LA UBICACIÓN DEL DIRECTORIO DONDE SE GUARDAN LOS FICHEROS
-----------------------------------------------------------------
	ckeditor {
		config = "/js/myckconfig.js"
			skipAllowedItemsCheck = false
		defaultFileBrowser = "ofm"
		upload {
			basedir = "../uploads/"
		...
	}

En este ejemplo en lugar ubicar "uploads" dentro de "web-app", lo pondría en el mismo nivel.

El problema con esto es el permiso para borrar/editar el nombre de una imagen. Debido al controlador OpenMagerFileController del propio plugin y al
PathUtils, para dejar realizar estas acciones comprueba el path, y si hay ".." los elimna por lo que las rutas NO coinciden.



<ESTILOS>********************************************************************************************************************************************
-------------------------------
CAMBIAR ESTILOS DEL RICH EDITOR
-------------------------------
Para cambiar los estilos que se utilizan en el Rich Editor hay que incluir en el archivo de configuración (ckeditorconfig.js, que e el que se está
utilizando en todos los ejemeplos) hay que incluir:
	config.contentsCss = "/gcrrhh/css/contents.css"
	
El archivo se encuentra en la carpeta "web-app" de la aplicación "gcrrhh".

NO se puede utilizar ${grails.util.Metadata.current.'app.name'}.


<CONFIG.JS>******************************************************************************************************************************************
-------------------------------
CAMBIAR INDENTADO DE LA SANGRÍA
-------------------------------
El botón de añadir sangría/quitar sangría (out/indent) es un plugin!!. Por lo que NO se puede modificar.
Para variar el valor del indentado de la sangría (40px por defecto) hay que poner lo siguiente en el archivo config.js (myckconfig.js):
	CKEDITOR.editorConfig = function( config ) {
		...
		config.indentOffset = 20;
		...
	};

Con esto se variará a 20px por defecto.

Esto está extraído de una página (http://docs.cksource.com/ckeditor_api/symbols/CKEDITOR.config.html#.indentOffset) que habla de configuraciones para 
CKEditor a partir de la versión 3, al menos en la indentación.

Otras cosas interesantes relacionadas con la indentación son:
	<static> {Array} CKEDITOR.config.indentClasses					Since: 3.0
		List of classes to use for indenting the contents. If it's null, no classes will be used and instead the #indentUnit and #indentOffset properties 
		will be used.
		Defined in: plugins/indent/plugin.js.
		Código:
		-----------------------------------------------------------
		|// Use the classes 'Indent1', 'Indent2', 'Indent3'		  |
		|config.indentClasses = ['Indent1', 'Indent2', 'Indent3'];|
		-----------------------------------------------------------
		Default Value:
			null 
	-------------------------------------------------------------------------------------------------------------------------------------------------
	<static> {Number} CKEDITOR.config.indentOffset					Since: 3.0
		Size of each indentation step
		Defined in: plugins/indent/plugin.js.
		Código:
		--------------------------
		|config.indentOffset = 4;|
		--------------------------
		Default Value:
			40 
	-------------------------------------------------------------------------------------------------------------------------------------------------
	<static> {String} CKEDITOR.config.indentUnit					Since: 3.0
		Unit for the indentation style
		Defined in: plugins/indent/plugin.js.
		Código
		---------------------------
		|config.indentUnit = 'em';|
		---------------------------
		Default Value:
			'px' 


-----------------------
BARRA DE TAREAS/TOOLBAR
-----------------------
Barra de tareas completa:
	 config.toolbar = 'Editor';
	 
	 config.toolbar_Editor = [
//		 config.toolbar =  [
	         { name: 'document', items : [ 'Source','-','Save','NewPage','DocProps','Print'] },
  		 	 { name: 'clipboard', items : [ 'Cut','Copy','Paste','PasteText','PasteFromWord','-','Undo','Redo' ] },
 		 	 { name: 'editing', items : [ 'Find','Replace','-','SelectAll','-','SpellChecker', 'Scayt' ] },
 		 	 { name: 'forms', items : [ 'Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton', 
 		         'HiddenField' ] },
 		 	 '/',
 		 	 { name: 'basicstyles', items : [ 'Bold','Italic','Underline','Strike','Subscript','Superscript','-','RemoveFormat' ] },
 		 	 { name: 'paragraph', items : [ 'NumberedList','BulletedList','-','Outdent','Indent','-','Blockquote','CreateDiv',
 		 	 '-','JustifyLeft','JustifyCenter','JustifyRight','JustifyBlock','-','BidiLtr','BidiRtl' ] },
 		 	 { name: 'links', items : [ 'Link','Unlink','Anchor' ] },
 		 	 { name: 'insert', items : [ 'Image','Flash','Table','HorizontalRule','Smiley','SpecialChar','PageBreak','Iframe' ] },
 		 	 '/',
 		 	 { name: 'styles', items : [ 'Styles','Format','Font','FontSize' ] },
 		 	 { name: 'colors', items : [ 'TextColor','BGColor' ] },
 		 	 { name: 'tools', items : [ 'Maximize', 'ShowBlocks'] },
 		 	 { name: 'tools', items : [ 'About'] },
 		 	 //'/',
 		 	 //{ name: 'fitxes', items : [ 'DivDspl', '-', 'ListInDspl'] }
	];

			
<PROBLEMAS>******************************************************************************************************************************************
----------------------------------------------------
EL RICH EDITOR ELIMINA LOS CLASS="" DE LOS ELEMENTOS
----------------------------------------------------
En la parte GSP se guardan elementos con estilos, como podría ser:
	<p class="txt-descripcio">Informaci&oacute; relacionada amb l&#39;acc&eacute;s a la Universitat (acollida, declaraci&oacute; d&#39;activitats), 
	classificaci&oacute; dels col&middot;lectius PAS i PR, Relaci&oacute; de Llocs de Treball (descripci&oacute; i perfils) i 
	desvinculaci&oacute; (ren&uacute;ncia).</p>

Este class="txt-descripcio" al ser guardado desde la parte rich editor se perderá para siempre.

La solución es poner en el config.js (o el que toque) lo siguiente:
	config.allowedContent=true
	config.extraAllowedContent = '*(*)';
	
Referencias:
http://stackoverflow.com/questions/15659390/ckeditor-automatically-strips-classes-from-div
	
*****************************************************************************************************************************************************
------------------------------
Creación:		16-11-2014
				
Jesús Campos Muñoz
jesus.campos@upc.edu
------------------------------