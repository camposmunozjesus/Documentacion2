COMANDOS ÚTILES EN GRAILS
=========================
------------
CREAR UN WAR
------------
Hay que ir a la línea de comandos y escribir:
	test war
y lo crea en la carpeta "target".

Otras opciones son:
	dev war
	prod war

	
---------------------------------------------
CREAR UN WAR PARA UN ENTORNO ESPECÍFICO/NUEVO
---------------------------------------------
Comando: -Dgrails.env=nombre_del_nuevo_entorno war

Previamente se debe haber definido el entorno tanto en el Config.groovy, como en el DataSource.groovy (La conexión a la base de datos), y en el caso de
tener en el BuildConfig.groovy algo similar a:
grails.project.fork = [
	// configure settings for compilation JVM, note that if you alter the Groovy version forked compilation is required
	//  compile: [maxMemory: 256, minMemory: 64, debug: false, maxPerm: 256, daemon:true],

	// configure settings for the test-app JVM, uses the daemon by default
	test: [maxMemory: 1024, minMemory: 500, debug: false, maxPerm: 512, daemon:true],
	// configure settings for the run-app JVM
	run: [maxMemory: 1024, minMemory: 500, debug: false, maxPerm: 512, forkReserve:false],
	// configure settings for the run-war JVM
	war: [maxMemory: 1024, minMemory: 500, debug: false, maxPerm: 512, forkReserve:false],
	// configure settings for the Console UI JVM
	console: [maxMemory: 1024, minMemory: 500, debug: false, maxPerm: 512]
]

También se debería añadir el entorno??????????? Seguramente NO, porque no se reflejan los entornos en este apartado, sino las acciones.

En el caso del Weceem se debe retocar el Searchable.groovy, añadiendo el entorno que toque. Replicar el caso del test, que es del que generalmente se
realiza el WAR.


---------------
ACCIONES - ANT?
---------------
Se pueden realizar acciones en el momento de crear el paquete WAR. 

Una de ellas es eliminar un directorio de la carpeta "web-app". Situando el siguiente código en el archivo BuildConfig.groovy:
	grails.war.resources = { stagingDir ->
		delete { fileset dir: "${stagingDir}/rrhh_resources/" }
		delete(dir: "${stagingDir}/rrhh_resources/")
	}

Otra de ellas es incluir el directorio donde se encuentran los Javadocs en el paquete WAR para poder acceder a ellos una vez está desplegada la aplicación
web:
	//Copiar un directorio entero
	grails.war.resources = { stagingDir, args ->
		
		def copyFolder
		copyFolder = {basePath, path ->
			String fullPath = basePath+path
			
			File file = new File(fullPath)
			
			String[] directorios = file.list()
			
			for (String string : directorios) {
				if(new File(fullPath+"/"+string).isDirectory())
				{
					copyFolder(basePath, path+string+"/")
				}
				else{
					copy(file: fullPath+"/"+string,
						todir: "${stagingDir}/${path}/")
				}
			}
		}
		
		copyFolder("target/", "docs/gapi/")
		println "Javadocs in WAR"
		
	}


Otras instrucciones válidas son:
	grails.war.resources = { stagingDir ->
		copy(file: "target/docs/all-docs.html", Funciona bien
			tofile: "${stagingDir}/docs/all-docs.html")
	}


*****************************************************************************************************************************************************
------------------------------
Creación:	24-11-2014

Jesús Campos Muñoz
jesus.campos@upc.edu
------------------------------
	