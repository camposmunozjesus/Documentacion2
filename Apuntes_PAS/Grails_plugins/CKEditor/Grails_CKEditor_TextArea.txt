GRAILS - CKEDITOR PLUGIN - FORMA ALTERNATIVA DE INCLUIR EL CKEDITOR
===================================================================
----------------
LINKS DE INTERÉS
----------------
https://github.com/galetahub/ckeditor/issues/228


*****************************************************************************************************************************************************
------------------------------
INSTALACIÓN DE CKEDITOR PLUGIN
------------------------------
Referencia de utilización: 
Plugins must be declared in the grails-app/conf/BuildConfig.groovy file.
Example:
grails.project.dependency.resolution = {
   ...
   plugins {
      compile ":ckeditor:3.6.6.1.0"
   }
}


<CONFIGURACIÓN>**************************************************************************************************************************************
-----------------
INCLUIR EL EDITOR
-----------------
Esta forma de incluir el editor permite cambiar el color desde la propia página HTML.
<html>
	<head>
		<ckeditor:resources/>
	</head>	
	<body>	
		<textarea cols="80" id="editor1" name="editor1" rows="10">&lt;p&gt;This is some &lt;strong&gt;sample text&lt;/strong&gt;. You are using &lt;a href="http://ckeditor.com/"&gt;CKEditor&lt;/a&gt;.&lt;/p&gt;</textarea>
		<script>

			// Replace the <textarea id="editor"> with an CKEditor
			// instance, using default configurations.
			CKEDITOR.replace( 'editor1', {
				uiColor: '#14B8C4',
				toolbar: [
					[ 'Bold', 'Italic', '-', 'NumberedList', 'BulletedList', '-', 'Link', 'Unlink' ],
					[ 'FontSize', 'TextColor', 'BGColor' ]
				]
			});
		</script>
	</body>
</html>
	
Cómo se recupera el texto?


<SUBIR FICHEROS AL SERVIDOR>*************************************************************************************************************************
--------------
SUBIR IMÁGENES
--------------
Para poder subir imágenes desde el botón "imagen" (es decir que aparesca el tab "Upload" y en el tab "link" la opción de "Browse server") hay que 
configurar CKEditor expresamente para ello ya que por defecto no vienen estas opciones.

Para ello basta con poner en el Config.groovy del proyecto que importa el plugin CKEditor:
		<textarea cols="80" id="editor1" name="editor1" rows="10">${params?.arxiuContingut?:arxiu?.contingut}</textarea>
		<script>
			// Replace the <textarea id="editor"> with an CKEditor
			// instance, using default configurations.
			CKEDITOR.replace( 'editor1', {
				uiColor: '#14B8C4',
	            filebrowserBrowseUrl: '/ck/ofm',
	            filebrowserUploadUrl: '/ck/ofm'
			});
		</script>

Pero al ver servidor flla, habrá que configuar el directorio.

-----------------------------------------------------------------
CAMBIAR LA UBICACIÓN DEL DIRECTORIO DONDE SE GUARDAN LOS FICHEROS
-----------------------------------------------------------------



<CONFIG.JS>********************************************************************************************************************************************
--------------------------------------------------------------------
ARCHIVOS DE CONFIGURACIÓN DISTINTO DE CONFIG.JS - INDICADO EN LA GSP
--------------------------------------------------------------------
También se puede cambiar la ubicación del fichero o indicar un confi.js diferente en la propia pantalla GSP. Para ello el archivo config.js debe ubicarse
en /CKEditorDemo/.link_to_grails_plugins/ckeditor-4.4.1.0/web-app/js/ckeditor y si la ruta comienza en la GSP por "/" entonces se refiere a 
/CKEditorDemo/.link_to_grails_plugins/ckeditor-4.4.1.0/web-app.

Esto permite que cada GSP tenga un archivo config.js distinto y tener diferentes configuraciones para diferentes perfiles. Pero también hay que recordar
que los archivos que están en las ubicaciones indicadas se borrarán al desisntalar el plugin. NO he conseguido cargar desde la GSP un config.js que 
esté ubicado en el web-app de la aplicación -> estaría bien conseguirlo.

Para indicar el archivo config.js desde la GSP debe utilizarse un Text Area y no un CKEditor tag. Posteriormente debe utilizarse el JS necesario para
indicarle qué archivo utilizar. Ejemplo de código:

	<head>
		<ckeditor:resources/>
	</head>
	<body>
		<form>
			<textarea name="text" id="text" rows="10" cols="80">
				This is my textarea to be replaced with CKEditor.
			</textarea>
			<g:actionSubmit action="save" value="Desar" />
			<script>
				// Replace the <textarea id="text"> with a CKEditor
				// instance, using default configuration.
				CKEDITOR.replace( 'text', {
					//Para que esto funcione puede estar la closure del Config.groovy ckeditor.config
					customConfig: 'custom/ckeditor_config.js'	//Funciona con el archivo ubicado en: /CKEditorDemo/.link_to_grails_plugins/ckeditor-4.4.1.0/web-app/js/ckeditor/custom/ckeditor_config.js
					//Si está configurada la closure del Config.groovy ckeditor.config cargará ésta por defecto y aquí sobrescribiremos lo que esté en este archivo. 
					//Los archivos de configuración que se apuntan desde aquí únicamente pueden ubicarse en: /CKEditorDemo/.link_to_grails_plugins/ckeditor-4.4.1.0/web-app
					//y cuando en la ruta se pone de manera realiva, que no empieza por /, se refiere a la carpeta: /CKEditorDemo/.link_to_grails_plugins/ckeditor-4.4.1.0/web-app/js/ckeditor
				});
				
			</script>
		</form>
	</body>


-----------------------------------------------
CÓDIGO DEL CONFIG.JS EN LA PROPIA GSP - In-Page
-----------------------------------------------
Aquí sucede que se carga el archivo config.js ubicado en el plugin /CKEditorDemo/.link_to_grails_plugins/ckeditor-4.4.1.0/web-app/js/ckeditor . Por lo
que se cargan los valores del config.js y en la GSP se sobreescriben. es decir si hay una toolbar en el config.js, se carga ésta, y luego sy hay otra
diferente en la vista GSP se carga la de la GSP.

En lugar de utilizar un archivo de configuración, lo que se desea poner en el config.js se pone en la vista GSP. Para ello debe utilizarse un Text Area
y JS. Ejemplo de código:
	<head>
		<ckeditor:resources/>
	</head>
	<body>
		<form>
			<textarea name="text" id="text" rows="10" cols="80">
				This is my textarea to be replaced with CKEditor.
			</textarea>
			<g:actionSubmit action="save" value="Desar" />
			<script>
				// Replace the <textarea id="text"> with a CKEditor
				// instance, using default configuration.
				CKEDITOR.replace( 'text', {
					language: 'fr',
					uiColor: '#9AB8F3'
				});
			</script>
		</form>
	</body>	
	
	
<PERSONALIZACIÓN>
-----------------------------------------
BARRA DE TAREAS (TOOLBAR) EN MODO IN-PAGE
-----------------------------------------
Es necesario tener CKEditor en un Text Area porque estamos editando el config.js desde la GSP.
Cambiar la barra entera:
	<script>
		// Replace the <textarea id="text"> with a CKEditor
		// instance, using default configuration.
		CKEDITOR.replace( 'text', {
			language: 'ca',
			uiColor: '#9AB8F3',
			toolbar: 'ToolBarComplete'
			
		});
	</script>
	
Personalizar incluyendo botones:
	<script>
		// Replace the <textarea id="text"> with a CKEditor
		// instance, using default configuration.
		CKEDITOR.replace( 'text', {
			language: 'ca',
			uiColor: '#9AB8F3',
			toolbar: [ { name: 'document', items: [ 'Image','Source', '-', 'NewPage', 'Preview' ]} ]
			
		});
	</script>

Otra barra diferente:
	<script>
		// Replace the <textarea id="text"> with a CKEditor
		// instance, using default configuration.
		CKEDITOR.replace( 'text', {
			language: 'ca',
			uiColor: '#9AB8F3',
				            toolbar: [
	             	     { name: 'document', items: [ 'Image','Source', '-', 'NewPage', 'Preview' ]},
	            	     { name: 'clipboard', items: [ 'Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo' ] },
	            	     '/',
	            	     { name: 'basicstyles', items: [ 'Bold', 'Italic' ] }
	            	 ]
		});
	</script>

En esencia hay que coger lo del config.js y quitarle el punto y coma (;) final.


*****************************************************************************************************************************************************
------------------------------
Creación:		04-02-2015
				
Jesús Campos Muñoz
jesus.campos@upc.edu
------------------------------